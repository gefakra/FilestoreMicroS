// <auto-generated />
using System;
using FilestoreMicroS.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FilestoreMicroS.Migrations
{
    [DbContext(typeof(FileStoreContext))]
    [Migration("20251018065902_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.10");

            modelBuilder.Entity("FilestoreMicroS.Models.FileEntity", b =>
                {
                    b.Property<string>("Hash")
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("CompressedData")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<long>("OriginalSize")
                        .HasColumnType("INTEGER");

                    b.HasKey("Hash");

                    b.HasIndex("Hash")
                        .IsUnique();

                    b.ToTable("Files");
                });

            modelBuilder.Entity("FilestoreMicroS.Models.FileOwner", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("AddedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("FileHash")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FileHash");

                    b.HasIndex("OwnerId");

                    b.ToTable("FileOwners");
                });

            modelBuilder.Entity("FilestoreMicroS.Models.Owner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Owners");
                });

            modelBuilder.Entity("FilestoreMicroS.Models.FileOwner", b =>
                {
                    b.HasOne("FilestoreMicroS.Models.FileEntity", "File")
                        .WithMany("Owners")
                        .HasForeignKey("FileHash")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FilestoreMicroS.Models.Owner", "Owner")
                        .WithMany("FileOwners")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("File");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("FilestoreMicroS.Models.FileEntity", b =>
                {
                    b.Navigation("Owners");
                });

            modelBuilder.Entity("FilestoreMicroS.Models.Owner", b =>
                {
                    b.Navigation("FileOwners");
                });
#pragma warning restore 612, 618
        }
    }
}
